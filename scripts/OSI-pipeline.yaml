version: "2"
s3-log-pipeline:
  source:
    s3:
      acknowledgments: true
      notification_type: "sqs"
      compression: "gzip"
      notification_source: "eventbridge"
      codec:
        parquet:
      sqs:
        # Provide a SQS Queue URL to read from
        queue_url: "https://sqs.us-east-1.amazonaws.com/111111111111/AmazonSecurityLake-970d7b00-0f50-4f00-bc5e-99a6c5de6df1-Main-Queue"
        visibility_timeout: "120s"
        visibility_duplication_protection: true
      default_bucket_owner: 111111111111
      aws:
        # Provide the region to use for aws credentials
        region: "us-east-1"
        # Provide the role to assume for requests to SQS and S3
        sts_role_arn: "arn:aws:iam::000000000000:role/asl2os-pipeline-role"
  processor:
    - grok:
        grok_when: '/class_uid == 4002 and /metadata/product/name == "AWS WAF"'
        match:
          /metadata/product/feature/uid: [ "%{DATA}:%{DATA}:%{DATA}:%{DATA:/cloud/region}:%{DATA:/cloud/account/uid}:%{GREEDYDATA}" ]
    - delete_entries:
        with_keys: [ "/cloud/account" ]
        delete_when: '/metadata/product/name == "Amazon EKS"'
    - grok:
        grok_when: '/class_uid == 6003 and /metadata/product/name == "Amazon EKS"'
        match:
          /s3/key: [ "%{DATA}/%{DATA}/%{DATA}/%{DATA}=%{DATA:/cloud/region}/%{DATA}=%{DATA:/cloud/account/uid}/%{DATA}/%{GREEDYDATA}" ]
    - drop_events:
        drop_when: '/status_code != "OK" and /metadata/product/name == "Amazon VPC"'
    - add_entries:
        entries:
          - key: "/cloud/account/uid"
            value_expression: "/unmapped/recipientAccountId"
            add_when: '/metadata/product/name == "CloudTrail"'
          - key: "unmapped/s3_key"
            value_expression: "/s3/key"
          - key: "unmapped/s3_bucket"
            value_expression: "/s3/bucket"  
    - delete_entries:
        with_keys: ["uid","s3"]
    - lowercase_string:
        with_keys: ["/class_name" ]
    - substitute_string:
        entries:
          - source: "/class_name"
            from: "\\s"
            to: "_"
  sink:
    - opensearch:
        # Provide an AWS OpenSearch Service domain endpoint
        hosts: [ "https://vpc-os-engine-87ycq.us-east-1.es.amazonaws.com" ]
        aws:
          # Provide a Role ARN with access to the domain. This role should have a trust relationship with osis-pipelines.amazonaws.com
          sts_role_arn: "arn:aws:iam::000000000000:role/asl2os-pipeline-role"
          # Provide the region of the domain.
          region: "us-east-1"
        index: "ocsf-${/metadata/version}-${/class_uid}-${/class_name}"
        #dlq:
        #  s3:
        #    # Provide an S3 bucket
        #    bucket: "securitylake-results"
        #    # Provide a key path prefix for the failed requests
        #    key_path_prefix: "securitylake-results/dlq"
        #    # Provide the region of the bucket.
        #    region: "us-east-1"
        #    # Provide a Role ARN with access to the bucket. This role should have a trust relationship with osis-pipelines.amazonaws.com
        #    sts_role_arn: "arn:aws:iam::854725306385:role/OpenSearch-I